// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCinema.Data;

#nullable disable

namespace eCinema.Data.Migrations
{
    [DbContext(typeof(eCinemaContext))]
    [Migration("20230228180333_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eCInema.Data.Entities.Genres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = 0
                        },
                        new
                        {
                            Id = 2,
                            Genre = 2
                        },
                        new
                        {
                            Id = 3,
                            Genre = 9
                        });
                });

            modelBuilder.Entity("eCInema.Models.Entities.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Daniel",
                            LastName = "Radcliffe"
                        });
                });

            modelBuilder.Entity("eCInema.Models.Entities.ActorsMovies", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("ActorsMovies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            ActorId = 1
                        });
                });

            modelBuilder.Entity("eCInema.Models.Entities.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Chris",
                            LastName = "Columbus"
                        });
                });

            modelBuilder.Entity("eCInema.Models.Entities.DirectorsMovies", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "DirectorId");

                    b.HasIndex("DirectorId");

                    b.ToTable("DirectorsMovies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            DirectorId = 1
                        });
                });

            modelBuilder.Entity("eCInema.Models.Entities.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NoOfHall")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfColumns")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRows")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Halls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NoOfHall = 1,
                            NumberOfColumns = 10,
                            NumberOfRows = 5,
                            NumberOfSeats = 50
                        },
                        new
                        {
                            Id = 2,
                            NoOfHall = 2,
                            NumberOfColumns = 10,
                            NumberOfRows = 5,
                            NumberOfSeats = 50
                        },
                        new
                        {
                            Id = 3,
                            NoOfHall = 3,
                            NumberOfColumns = 10,
                            NumberOfRows = 5,
                            NumberOfSeats = 50
                        },
                        new
                        {
                            Id = 4,
                            NoOfHall = 4,
                            NumberOfColumns = 10,
                            NumberOfRows = 5,
                            NumberOfSeats = 50
                        },
                        new
                        {
                            Id = 5,
                            NoOfHall = 5,
                            NumberOfColumns = 10,
                            NumberOfRows = 5,
                            NumberOfSeats = 50
                        },
                        new
                        {
                            Id = 6,
                            NoOfHall = 6,
                            NumberOfColumns = 10,
                            NumberOfRows = 5,
                            NumberOfSeats = 50
                        });
                });

            modelBuilder.Entity("eCInema.Models.Entities.LoyalCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("LoyalCards");
                });

            modelBuilder.Entity("eCInema.Models.Entities.MoviesGenres", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MoviesGenres");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            GenreId = 1
                        });
                });

            modelBuilder.Entity("eCInema.Models.Entities.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Producers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Duncan",
                            LastName = "Henderson"
                        });
                });

            modelBuilder.Entity("eCInema.Models.Entities.ProducerMovies", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "ProducerId");

                    b.HasIndex("ProducerId");

                    b.ToTable("ProducersMovies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            ProducerId = 1
                        });
                });

            modelBuilder.Entity("eCInema.Models.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfTickets")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("eCInema.Models.Entities.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("NoAvailableSeats")
                        .HasColumnType("int");

                    b.Property<int?>("ScheduleSeatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("TicketPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("HallId");

                    b.HasIndex("MovieId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 2, 28, 19, 3, 32, 701, DateTimeKind.Local).AddTicks(2438),
                            EndTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HallId = 1,
                            MovieId = 1,
                            NoAvailableSeats = 50,
                            StartTime = new DateTime(2023, 2, 28, 19, 3, 32, 701, DateTimeKind.Local).AddTicks(2479),
                            TicketPrice = 7.5
                        });
                });

            modelBuilder.Entity("eCInema.Models.Entities.ScheduleSeat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.Property<bool>("isTaken")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("SeatId");

                    b.ToTable("ScheduleSeats");
                });

            modelBuilder.Entity("eCInema.Models.Entities.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Column")
                        .HasColumnType("int");

                    b.Property<int?>("HallId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HallId");

                    b.ToTable("Seats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Column = 1,
                            HallId = 1,
                            Row = "A"
                        },
                        new
                        {
                            Id = 2,
                            Column = 2,
                            HallId = 1,
                            Row = "A"
                        },
                        new
                        {
                            Id = 3,
                            Column = 3,
                            HallId = 1,
                            Row = "A"
                        },
                        new
                        {
                            Id = 4,
                            Column = 4,
                            HallId = 1,
                            Row = "A"
                        },
                        new
                        {
                            Id = 5,
                            Column = 5,
                            HallId = 1,
                            Row = "A"
                        },
                        new
                        {
                            Id = 6,
                            Column = 6,
                            HallId = 1,
                            Row = "A"
                        },
                        new
                        {
                            Id = 7,
                            Column = 7,
                            HallId = 1,
                            Row = "A"
                        },
                        new
                        {
                            Id = 8,
                            Column = 8,
                            HallId = 1,
                            Row = "A"
                        },
                        new
                        {
                            Id = 9,
                            Column = 9,
                            HallId = 1,
                            Row = "A"
                        },
                        new
                        {
                            Id = 10,
                            Column = 10,
                            HallId = 1,
                            Row = "A"
                        },
                        new
                        {
                            Id = 11,
                            Column = 1,
                            HallId = 1,
                            Row = "B"
                        },
                        new
                        {
                            Id = 12,
                            Column = 2,
                            HallId = 1,
                            Row = "B"
                        },
                        new
                        {
                            Id = 13,
                            Column = 3,
                            HallId = 1,
                            Row = "B"
                        },
                        new
                        {
                            Id = 14,
                            Column = 4,
                            HallId = 1,
                            Row = "B"
                        },
                        new
                        {
                            Id = 15,
                            Column = 5,
                            HallId = 1,
                            Row = "B"
                        },
                        new
                        {
                            Id = 16,
                            Column = 6,
                            HallId = 1,
                            Row = "B"
                        },
                        new
                        {
                            Id = 17,
                            Column = 7,
                            HallId = 1,
                            Row = "B"
                        },
                        new
                        {
                            Id = 18,
                            Column = 8,
                            HallId = 1,
                            Row = "B"
                        },
                        new
                        {
                            Id = 19,
                            Column = 9,
                            HallId = 1,
                            Row = "B"
                        },
                        new
                        {
                            Id = 20,
                            Column = 10,
                            HallId = 1,
                            Row = "B"
                        },
                        new
                        {
                            Id = 21,
                            Column = 1,
                            HallId = 1,
                            Row = "C"
                        },
                        new
                        {
                            Id = 22,
                            Column = 2,
                            HallId = 1,
                            Row = "C"
                        },
                        new
                        {
                            Id = 23,
                            Column = 3,
                            HallId = 1,
                            Row = "C"
                        },
                        new
                        {
                            Id = 24,
                            Column = 4,
                            HallId = 1,
                            Row = "C"
                        },
                        new
                        {
                            Id = 25,
                            Column = 5,
                            HallId = 1,
                            Row = "C"
                        },
                        new
                        {
                            Id = 26,
                            Column = 6,
                            HallId = 1,
                            Row = "C"
                        },
                        new
                        {
                            Id = 27,
                            Column = 7,
                            HallId = 1,
                            Row = "C"
                        },
                        new
                        {
                            Id = 28,
                            Column = 8,
                            HallId = 1,
                            Row = "C"
                        },
                        new
                        {
                            Id = 29,
                            Column = 9,
                            HallId = 1,
                            Row = "C"
                        },
                        new
                        {
                            Id = 30,
                            Column = 10,
                            HallId = 1,
                            Row = "C"
                        },
                        new
                        {
                            Id = 31,
                            Column = 1,
                            HallId = 1,
                            Row = "D"
                        },
                        new
                        {
                            Id = 32,
                            Column = 2,
                            HallId = 1,
                            Row = "D"
                        },
                        new
                        {
                            Id = 33,
                            Column = 3,
                            HallId = 1,
                            Row = "D"
                        },
                        new
                        {
                            Id = 34,
                            Column = 4,
                            HallId = 1,
                            Row = "D"
                        },
                        new
                        {
                            Id = 35,
                            Column = 5,
                            HallId = 1,
                            Row = "D"
                        },
                        new
                        {
                            Id = 36,
                            Column = 6,
                            HallId = 1,
                            Row = "D"
                        },
                        new
                        {
                            Id = 37,
                            Column = 7,
                            HallId = 1,
                            Row = "D"
                        },
                        new
                        {
                            Id = 38,
                            Column = 8,
                            HallId = 1,
                            Row = "D"
                        },
                        new
                        {
                            Id = 39,
                            Column = 9,
                            HallId = 1,
                            Row = "D"
                        },
                        new
                        {
                            Id = 40,
                            Column = 10,
                            HallId = 1,
                            Row = "D"
                        },
                        new
                        {
                            Id = 41,
                            Column = 1,
                            HallId = 1,
                            Row = "E"
                        },
                        new
                        {
                            Id = 42,
                            Column = 2,
                            HallId = 1,
                            Row = "E"
                        },
                        new
                        {
                            Id = 43,
                            Column = 3,
                            HallId = 1,
                            Row = "E"
                        },
                        new
                        {
                            Id = 44,
                            Column = 4,
                            HallId = 1,
                            Row = "E"
                        },
                        new
                        {
                            Id = 45,
                            Column = 5,
                            HallId = 1,
                            Row = "E"
                        },
                        new
                        {
                            Id = 46,
                            Column = 6,
                            HallId = 1,
                            Row = "E"
                        },
                        new
                        {
                            Id = 47,
                            Column = 7,
                            HallId = 1,
                            Row = "E"
                        },
                        new
                        {
                            Id = 48,
                            Column = 8,
                            HallId = 1,
                            Row = "E"
                        },
                        new
                        {
                            Id = 49,
                            Column = 9,
                            HallId = 1,
                            Row = "E"
                        },
                        new
                        {
                            Id = 50,
                            Column = 10,
                            HallId = 1,
                            Row = "E"
                        });
                });

            modelBuilder.Entity("eCInema.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Discriminator")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasDiscriminator<int>("Discriminator").HasValue(0);

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            PasswordHash = "wWkgRwOi65hk+ufylkpbVw6TjTM=",
                            PasswordSalt = "fQE9B1VZbU3bAl2VxLPOtQ==",
                            Phone = "041233234",
                            UserName = "Admin",
                            UserRole = 0
                        });
                });

            modelBuilder.Entity("eCInema.Models.Entities.Writer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Writers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Steve",
                            LastName = "Kloves"
                        });
                });

            modelBuilder.Entity("eCInema.Models.Entities.WritersMovies", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("WriterId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "WriterId");

                    b.HasIndex("WriterId");

                    b.ToTable("WritersMovies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            WriterId = 1
                        });
                });

            modelBuilder.Entity("eCInema.Models.Movies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<byte[]>("Poster")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Synopsis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "USA",
                            Duration = 120,
                            ReleaseYear = 2001,
                            Synopsis = "Harry Potter, an eleven-year-old orphan, discovers that he is a wizard and is invited to study at Hogwarts. Even as he escapes a dreary life and enters a world of magic, he finds trouble awaiting him.",
                            Title = "Harry Potter and the Philosopher's Stone"
                        });
                });

            modelBuilder.Entity("eCInema.Models.Entities.Customer", b =>
                {
                    b.HasBaseType("eCInema.Models.Entities.User");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<string>("IdentificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue(1);

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Email = "customer@gmail.com",
                            FirstName = "Customer",
                            LastName = "Customer",
                            PasswordHash = "wWkgRwOi65hk+ufylkpbVw6TjTM=",
                            PasswordSalt = "fQE9B1VZbU3bAl2VxLPOtQ==",
                            Phone = "041233234",
                            UserName = "Customer",
                            UserRole = 1,
                            CustomerType = 0
                        });
                });

            modelBuilder.Entity("eCInema.Models.Entities.ActorsMovies", b =>
                {
                    b.HasOne("eCInema.Models.Entities.Actor", "Actor")
                        .WithMany("ActorsMovies")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCInema.Models.Movies", "Movie")
                        .WithMany("ActorsMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("eCInema.Models.Entities.DirectorsMovies", b =>
                {
                    b.HasOne("eCInema.Models.Entities.Director", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCInema.Models.Movies", "Movie")
                        .WithMany("DirectorsMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("eCInema.Models.Entities.LoyalCard", b =>
                {
                    b.HasOne("eCInema.Models.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("eCInema.Models.Entities.MoviesGenres", b =>
                {
                    b.HasOne("eCInema.Data.Entities.Genres", "Genre")
                        .WithMany("MoviesGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCInema.Models.Movies", "Movie")
                        .WithMany("MoviesGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("eCInema.Models.Entities.ProducerMovies", b =>
                {
                    b.HasOne("eCInema.Models.Movies", "Movie")
                        .WithMany("ProducersMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCInema.Models.Entities.Producer", "Producer")
                        .WithMany("ProducerMovies")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("eCInema.Models.Entities.Reservation", b =>
                {
                    b.HasOne("eCInema.Models.Entities.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCInema.Models.Entities.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("eCInema.Models.Entities.Schedule", b =>
                {
                    b.HasOne("eCInema.Models.Entities.Hall", "Hall")
                        .WithMany()
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eCInema.Models.Movies", "Movie")
                        .WithMany("Schedules")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("eCInema.Models.Entities.ScheduleSeat", b =>
                {
                    b.HasOne("eCInema.Models.Entities.Reservation", null)
                        .WithMany("ScheduleSeat")
                        .HasForeignKey("ReservationId");

                    b.HasOne("eCInema.Models.Entities.Schedule", "Schedule")
                        .WithMany("ScheduleSeats")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCInema.Models.Entities.Seat", "Seat")
                        .WithMany()
                        .HasForeignKey("SeatId")
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("eCInema.Models.Entities.Seat", b =>
                {
                    b.HasOne("eCInema.Models.Entities.Hall", "Hall")
                        .WithMany("Seats")
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("eCInema.Models.Entities.WritersMovies", b =>
                {
                    b.HasOne("eCInema.Models.Movies", "Movie")
                        .WithMany("WritersMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCInema.Models.Entities.Writer", "Writer")
                        .WithMany("WritersMovies")
                        .HasForeignKey("WriterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Writer");
                });

            modelBuilder.Entity("eCInema.Data.Entities.Genres", b =>
                {
                    b.Navigation("MoviesGenres");
                });

            modelBuilder.Entity("eCInema.Models.Entities.Actor", b =>
                {
                    b.Navigation("ActorsMovies");
                });

            modelBuilder.Entity("eCInema.Models.Entities.Hall", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("eCInema.Models.Entities.Producer", b =>
                {
                    b.Navigation("ProducerMovies");
                });

            modelBuilder.Entity("eCInema.Models.Entities.Reservation", b =>
                {
                    b.Navigation("ScheduleSeat");
                });

            modelBuilder.Entity("eCInema.Models.Entities.Schedule", b =>
                {
                    b.Navigation("ScheduleSeats");
                });

            modelBuilder.Entity("eCInema.Models.Entities.Writer", b =>
                {
                    b.Navigation("WritersMovies");
                });

            modelBuilder.Entity("eCInema.Models.Movies", b =>
                {
                    b.Navigation("ActorsMovies");

                    b.Navigation("DirectorsMovies");

                    b.Navigation("MoviesGenres");

                    b.Navigation("ProducersMovies");

                    b.Navigation("Schedules");

                    b.Navigation("WritersMovies");
                });

            modelBuilder.Entity("eCInema.Models.Entities.Customer", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
